# backup-s3.yml
#
# 이 파일은 GitHub Actions 워크플로 설정 파일로, master 브랜치에 커밋이 푸시될 때마다
# AWS S3 버킷에 프로젝트 압축본을 백업하기 위한 설정입니다.
# ------------------------------------------------------------------------------
# ※ 사용 전, 아래 항목들을 본인의 환경에 맞춰 수정하십시오.
#    1) YOUR_S3_BUCKET_NAME: 백업용으로 사용할 S3 버킷 이름
#    2) GitHub Secrets 설정(레포지토리 > Settings > Secrets > Actions):
#       - AWS_ACCESS_KEY_ID
#       - AWS_SECRET_ACCESS_KEY
#       - AWS_REGION
#
# 본 예시에서는 파일명을 "dailydevq-main-backup-<날짜>-<커밋 SHA 앞 7자리>.zip" 형태로 생성합니다.
# GitHub Expressions( ${{ github.sha }} ) 는 run: 쉘 스크립트 내부에서 직접 사용하기 어렵기 때문에,
# GITHUB_SHA 환경 변수를 셸에서 잘라쓰는 방식을 사용합니다.

name: Backup to S3  # 워크플로 이름

on:
  push:
    branches:
      - "master"  # master 브랜치에 코드가 푸시될 때마다 트리거

jobs:
  backup_s3_job:
    runs-on: ubuntu-latest

    steps:
      - name: 레포지토리 체크아웃
        # actions/checkout@v3 액션을 사용하여 푸시된 코드 전체를 가져옵니다.
        uses: actions/checkout@v3

      - name: AWS 자격 증명 설정
        # GitHub Actions에서 AWS 명령어를 사용할 수 있도록 자격 증명(IAM)을 구성합니다.
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: 코드 압축
        run: |
          # GitHub Actions 환경 변수인 GITHUB_SHA에서 앞 7자리를 잘라 사용
          SHORT_SHA="${GITHUB_SHA:0:7}"

          # 날짜(YYYYMMDD_HHMMSS) + SHORT_SHA 조합으로 백업 파일명 생성
          BACKUP_NAME="dailydevq-main-backup-$(date +'%Y%m%d_%H%M%S')-${SHORT_SHA}.zip"

          # 현재 디렉터리(.) 전체를 압축
          zip -r "$BACKUP_NAME" .

          echo "Created backup file: $BACKUP_NAME"

      - name: S3 업로드
        run: |
          # 다시 한 번 동일 로직으로 파일명 결정 (스텝이 분리되었으므로 변수 재설정)
          SHORT_SHA="${GITHUB_SHA:0:7}"
          BACKUP_NAME="dailydevq-main-backup-$(date +'%Y%m%d_%H%M%S')-${SHORT_SHA}.zip"

          # S3 버킷에 업로드 (백업 전용 디렉터리인 backups/ 아래에 저장)
          aws s3 cp "$BACKUP_NAME" s3://dailydevq-backup/backups/"$BACKUP_NAME"
