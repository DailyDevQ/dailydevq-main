# backup-s3.yml

# 이 파일은 GitHub Actions 워크플로우 설정 파일로, 특정 브랜치(master)에 코드가 푸시될 때마다
# AWS S3 버킷에 프로젝트 압축본을 백업하는 역할을 합니다.
# ---------------------------------------------------------------------------
# ※ 주의: 실제로 적용하기 전, 아래 부분들을 반드시 자신의 환경에 맞게 변경해야 합니다.
#    - YOUR_S3_BUCKET_NAME: 백업용으로 사용할 S3 버킷 이름
#    - secrets.AWS_ACCESS_KEY_ID, secrets.AWS_SECRET_ACCESS_KEY, secrets.AWS_REGION: 
#      GitHub 리포지토리 Settings > Secrets > Actions 에서 설정
name: Backup to S3  # 워크플로우의 이름

on:
  push:
    branches:
      - "master"  # master 브랜치에 코드가 푸시될 때마다 이 워크플로우가 트리거됩니다.

jobs:
  backup_s3_job:
    # GitHub Actions에서 제공하는 가상 환경(우분투 최신 버전)을 사용합니다.
    runs-on: ubuntu-latest

    steps:
      - name: 레포지토리 체크아웃
        # actions/checkout@v3 액션을 사용해, 현재 커밋된 소스를 받아옵니다.
        uses: actions/checkout@v3

      - name: AWS 자격 증명 설정
        # GitHub Actions가 AWS 리소스(S3)에 접근할 수 있도록 인증을 구성합니다.
        uses: aws-actions/configure-aws-credentials@v2
        with:
          # GitHub Secrets에 저장한 AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_REGION을 불러옵니다.
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: 코드 압축
        # 현재 워크스페이스(체크아웃된 레포지토리)를 소스 코드 전체로 보고, 날짜나 커밋 SHA 등을 붙여서 압축본을 만듭니다.
        run: |
          zip -r source_code_$(date +'%Y%m%d_%H%M%S')_$GITHUB_SHA.zip .

      - name: S3 업로드
        # 만든 압축 파일을 AWS CLI를 통해 S3 버킷에 업로드합니다.
        run: |
          aws s3 cp source_code_$(date +'%Y%m%d_%H%M%S')_$GITHUB_SHA.zip s3://dailydevq-backup/backups/
